#include "Converter.h"

//------------------------------------------------------------------------------------------------------------------------------------------------
//!		
//------------------------------------------------------------------------------------------------------------------------------------------------
std::vector<u32> Convert ( const MIntArray &maya ){
	s32 len = s32(maya.length());
	std::vector<u32> result ( len );
	#pragma omp parallel for if(1000 < len)
	for ( s32 i = 0; i<len; ++i ) {
		result [i] = u32 ( maya[i] );
	}
	return result;
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!		 
//------------------------------------------------------------------------------------------------------------------------------------------------
MIntArray Convert ( const std::vector<u32> &u32Array ){
	s32 len = s32(u32Array.size());
	MIntArray result ( len );
	#pragma omp parallel for if(1000 < len)
		for ( s32 i = 0; i<len; ++i ) {
			result[i] = int(u32Array[i]);
		}
	return result;
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!		
//------------------------------------------------------------------------------------------------------------------------------------------------
std::vector<f32> Convert ( const MFloatArray &maya ) {
	s32 len = s32(maya.length());
	std::vector<f32> result ( len );
	#pragma omp parallel for if(1000 < len)
		for ( s32 i = 0; i<len; ++i ) {
			result [i] = f32 ( maya [i] );
		}
	return result;
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!		
//------------------------------------------------------------------------------------------------------------------------------------------------
MFloatArray Convert ( const std::vector<f32> &f32Array ) {
	s32 len = s32( f32Array.size() );
	MFloatArray result ( len );
	#pragma omp parallel for if(1000 < len)
		for ( s32 i = 0; i<len; ++i ) {
			result [i] = float ( f32Array [i] );
		}
	return result;
}
