//------------------------------------------------------------------------------------------------------------------------------------------------
//!	    
//------------------------------------------------------------------------------------------------------------------------------------------------
template<typename T>
OctreeNodeT<T>::OctreeNodeT ( u8 _level, Vec3T<T> centerPos, T sideLength )
	: level{ _level }
	, position{ centerPos }
	, sideLength{ sideLength }
{
	this->min = centerPos - Vec3T<T> ( sideLength * T ( 0.5 ) );
	this->max = centerPos + Vec3T<T> ( sideLength * T ( 0.5 ) );
	this->radius = centerPos.distanceTo ( this->min );
	this->triPolyIDs.reserve ( BurgessOctree::MAX_TRIPOLYGON_COUNT );
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!	    三角形ポリゴンをこのノードに登録する
//------------------------------------------------------------------------------------------------------------------------------------------------
template<typename T>
void OctreeNodeT<T>::addTriPolyID ( u32 triPolyID ) {
	this->triPolyIDs.push_back( triPolyID );
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!	    ノードの子供階層に新規ノードを追加する
//------------------------------------------------------------------------------------------------------------------------------------------------
template<typename T>
void OctreeNodeT<T>::addNode ( u8 _level, Vec3T<T> _centerPos, T _sideLength ){
	this->branches.push_back ( OctreeNodeT<T> ( _level, _centerPos, _sideLength ) );
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!	    ノードに登録している三角形ポリゴンの数を返す
//------------------------------------------------------------------------------------------------------------------------------------------------
template<typename T>
u16 OctreeNodeT<T>::polyCount ()const {
	return this->triPolyIDs.size ();
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//!	    このノードがノードツリーの末端である場合はtrueを返す
//------------------------------------------------------------------------------------------------------------------------------------------------
template<typename T>
Bool OctreeNodeT<T>::isLeafNode ()const{
	return this->branches.size () == 0;
}
